@import './variables.module.scss';

/*
 * Use mobile margins until a threshold, then fix the width and center the content
 *
 * Responsibility of composer to control width & margins at next breakpoint
 */

.useMobileMargins {
	margin: 0 $mobile-margins;

	@media (min-width: $mobile-content-threshold + 2 * $mobile-margins) {
		width: $mobile-content-threshold;
		margin: 0 auto;
	}
}

.link {
	min-width: $button-min-size;
	padding: 8px 0;
	font-family: 'IBM Plex Mono', sans-serif;
	text-align: center;
	text-transform: uppercase;
	white-space: nowrap;
	cursor: pointer;
	user-select: none;
	border-style: solid;
	border-width: 1px;
}

.redOnWhiteLink {
	composes: link;
	color: $maroon;
	border-color: $maroon;

	&:hover {
		font-weight: 600;
		color: $almost-white;
		background-color: $maroon;
	}
}

.box {
	composes: useMobileMargins;
	display: flex;
	flex-direction: column;
	align-self: flex-start;
	justify-content: center;
	max-width: $box-max-size;
	border-width: 2px;

	@media (min-width: $mobile-content-threshold + 2 * $hero-max-margins) {
		width: auto;
		margin: 0 $hero-max-margins;
	}
}

.header {
	font-family: 'bennet-banner', 'Playfair Display', serif;
	font-size: 45px;
	color: $maroon;
	text-align: center;
	letter-spacing: 0.035em;
}
