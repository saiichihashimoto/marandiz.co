@import '../variables.module.scss';

.container {
	display: flex;
	flex-direction: column;
	min-height: 100vh;
	background-color: $almost-white;
}

.heading {
	position: sticky;
	top: 0;
	background-color: $almost-white;

	.fadeAway {
		position: relative;

		&::after {
			position: absolute;
			right: 0;
			bottom: -100vh;
			left: 0;
			height: 125px;
			pointer-events: none;
			content: '';
			background: linear-gradient(to top, $white-boy-white 6.25%, rgba(255, 255, 255, 0) 100%);
		}
	}
}

.header {
	composes: header from '../common.module.scss';
}

.filter,
.link {
	composes: redOnWhiteLink from '../common.module.scss';
}

.filters {
	display: flex;
	flex-direction: row;
	justify-content: space-between;

	.filter {
		font-size: 14px;
		outline: none;

		&.selected {
			font-weight: 600;
			color: $almost-white;
			background-color: $maroon;
		}
	}
}

$thread-width: 300px;
$thread-margin: 40px;
$double-thread-width: 2 * $thread-width + $thread-margin;
$triple-thread-width: 3 * $thread-width + 2 * $thread-margin;
$two-columns-width: $double-thread-width + 2 * $thread-margin;
$three-columns-width: $triple-thread-width + 2 * $thread-margin;

.actions,
.threads {
	composes: useMobileMargins from '../common.module.scss';

	@media (min-width: $two-columns-width) {
		width: $double-thread-width;
		max-width: none;
	}

	@media (min-width: $three-columns-width) {
		width: $triple-thread-width;
	}
}

.threads {
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;
}

.thread {
	$padding: 20px;
	display: flex;
	flex-direction: column;
	align-items: stretch;
	width: 100%;
	min-height: 306px;
	padding: $padding;
	margin-bottom: $thread-margin;
	background-color: $white-boy-white;
	box-shadow: 2px 4px 8px rgba(0, 0, 0, 0.15);

	@media (min-width: $two-columns-width) {
		width: $thread-width;

		&.featured {
			flex-direction: row;
			width: $double-thread-width;

			.image {
				width: $thread-width + $thread-margin - $padding;
				height: 100%;
			}

			.content {
				padding-left: $padding;
			}

			.bottomSpacer {
				flex-grow: 1;
			}

			.linksHeader {
				display: initial;
			}
		}
	}

	.image {
		height: 190px;
		background-repeat: no-repeat;
		background-position: center;
		background-size: cover;
	}

	.content {
		display: flex;
		flex-direction: column;
		flex-grow: 1;
	}

	.topSpacer {
		flex-grow: 1;
	}

	.title {
		$line-height: 29px;
		min-height: 2 * $line-height;
		font-family: 'bennet-banner', 'Playfair Display', serif;
		font-size: 24px;
		line-height: $line-height;
	}

	.linksHeader {
		display: none;
		font-family: 'PT Sans', sans-serif;
		font-size: 16px;
		font-style: normal;
		font-weight: normal;
		line-height: 21px;
		color: $gray;
		text-transform: uppercase;
	}

	.link {
		font-size: 14px;

		@media (min-width: $two-columns-width) {
			&:only-child {
				margin-left: auto;
			}
		}

		&::after {
			display: inline-block;
			width: 1.5em;
			height: 0.7em;
			margin-left: 5px;
			content: '';
			background-image: url('./arrow.svg');
			background-repeat: no-repeat;
			background-position: center;
			background-size: cover;
		}

		&:hover {
			&::after {
				background-color: $almost-white;
				background-image: none;
				mask-image: url('./arrow.svg');
				mask-position: center;
				mask-repeat: no-repeat;
				mask-size: cover;
			}
		}
	}

	.links {
		display: flex;
		flex-direction: row;
		justify-content: center;

		@media (min-width: $two-columns-width) {
			justify-content: space-between;
		}
	}
}
